!function(s,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():s.AM=t()}(window||{},function(){const s=(s,t)=>{if(s)throw Error(t)},t=(s,t)=>typeof s===t,e=(s,t)=>typeof s!==t;let i={},n={lgLess:1600,lg:{min:1600,max:1199},lgUp:1199,mdLess:1200,md:{min:991,max:1200},mdUp:991,smLess:992,sm:{min:799,max:992},smUp:799,xsLess:800,xs:{min:560,max:800},xsUp:559,xxs:560,xxsUp:0};i.limitations={lastBreakpoint:"",isUsingLimitation:!0},i.changeLimitationMode=(t=>{s("bool"!=typeof t,"First argument must be a value of Boolean type."),i.limitations={...limitations,isUsingLimitation:t}});const m=e=>{const i=window.innerWidth;if(t(e,"object"))return s(!t(e.name,"string")&&!e.name.length,"The object breakpoint must have name is type of strint, and it must be named."),n.min&&n.max?i>n.min&&i<n.max:n.min?i>n.min:i<n.max;switch(e){case"lgUp":return i>n.lgUp;case"mdUp":return i>n.mdUp;case"smUp":return i>n.smUp;case"xsUp":return i>n.xsUp;case"lg":return i>n.lg.min&&i<n.lg.max;case"md":return i>n.md.min&&i<n.md.max;case"sm":return i>n.sm.min&&i<n.sm.max;case"xs":return i>n.xs.min&&i<n.xs.max;case"lgLess":return i<n.lgLess;case"mdLess":return i<n.mdLess;case"smLess":return i<n.smLess;case"xsLess":return i<n.xsLess;case"xxs":return i<n.xxs;default:return!1}},a=(s,t=!1)=>{if(i.limitations.lastBreakpoint&&!t)return!1;i.limitations.lastBreakpoint=_isistentOf(s,"string")?s:s.name};return i.doBy=((t,n)=>{s(e(t,"string")&&e(t,"object"),"First argument must be an object or a string."),a(t);const r=i.limitations.lastBreakpoint;let o=!1;(m(t)&&r!==t||!i.limitations.isUsingLimitation)&&(o=!0),o&&(n(),i.limitations.isUsingLimitation&&a(t,!0))}),i.setBreakpoints=(t=>{s(e(t,"object"));for(const s in t)t[s].name=s,n[s]=t[s]}),i});